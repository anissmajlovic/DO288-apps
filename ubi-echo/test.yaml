apiVersion: v1
items:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: echo
      app.kubernetes.io/component: echo
      app.kubernetes.io/instance: echo
    name: ubi
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: registry.access.redhat.com/ubi8/ubi:8.0
      from:
        kind: DockerImage
        name: registry.access.redhat.com/ubi8/ubi:8.0
      generation: null
      importPolicy: {}
      name: "8.0"
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: echo
      app.kubernetes.io/component: echo
      app.kubernetes.io/instance: echo
    name: echo
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: ""
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: echo
      app.kubernetes.io/component: echo
      app.kubernetes.io/instance: echo
    name: echo
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: echo:latest
    postCommit: {}
    resources: {}
    source:
      contextDir: ubi-echo
      git:
        ref: docker-build
        uri: https://github.com/anissmajlovic/DO288-apps
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ubi:8.0
      type: Docker
    triggers:
    - github:
        secret: gx-TIvGv0YOEbLFIG4AM
      type: GitHub
    - generic:
        secret: exsAelgJvxwoBPsiVdvv
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"echo:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"echo\")].image"}]'
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: echo
      app.kubernetes.io/component: echo
      app.kubernetes.io/instance: echo
    name: echo
  spec:
    replicas: 1
    selector:
      matchLabels:
        deployment: echo
    strategy: {}
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deployment: echo
      spec:
        containers:
        - image: ' '
          name: echo
          resources: {}
  status: {}
kind: List
metadata: {}
